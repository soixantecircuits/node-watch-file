{
  "name": "array-series",
  "description": "Call an array of asynchronous functions in series",
  "version": "0.1.2",
  "scripts": {
    "test": "node test"
  },
  "readme": "# Array Series [![Build Status](https://travis-ci.org/jonathanong/array-series.png)](https://travis-ci.org/jonathanong/array-series)\n\nCall an array of asynchronous functions in series\n\n### API\n\n#### series(fns[, context[, callback]])\n\n```js\nvar series = require('array-series')\n\nseries([\n  function (done) {\n    done()\n  }\n], this, function (err) {\n\n})\n```\n\n#### fns\n\n`fns` is an array of functions to call in series.\nThe argument signature should be:\n\n```js\nfunction (done) {\n  done(new Error())\n  // or\n  done()\n}\n```\n\nThat is, each function should only take a `done` as an argument.\nEach callback should only take an optional `Error` as an argument.\n\n#### context\n\nOptional context to pass to each `fn`.\nBasically `fn.call(context, done)`.\n\n#### callback(err)\n\n```js\nfunction (err) {\n\n}\n```\n\nOnly argument is an `Error` argument.\nIt will return the first error in the series of functions that returns an error,\nand no function after will be called.\n\n### License\n\nWTFPL",
  "readmeFilename": "README.md",
  "_id": "array-series@0.1.2",
  "dist": {
    "shasum": "71b7bed3fbcb028fcc65f003a341a57e2a04e5aa"
  },
  "_from": "array-series@~0.1.0",
  "_resolved": "https://registry.npmjs.org/array-series/-/array-series-0.1.2.tgz"
}
